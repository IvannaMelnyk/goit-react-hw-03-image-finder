{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","services/galery-api.js","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/EmptyField/EmptyField.jsx","components/FetchImages/FetchImages.jsx","App.js","index.js"],"names":["SearchForm","state","query","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","reset","toast","className","this","type","placeholder","onChange","Component","Spinner","color","height","width","API","fetchImages","page","URL","fetch","then","response","ok","json","Promise","reject","Error","data","console","log","hits","Button","onClick","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","target","window","addEventListener","removeEventListener","src","alt","createPortal","ImageGalleryItem","showModal","toggleModal","largeImageURL","ImageGallery","images","map","image","index","webformatURL","tags","EmptyField","texterror","role","style","textAlign","ImageGalleryInfo","status","error","fetchImagesGallery","nextQuery","newImages","prevState","length","catch","onLoadMore","prevProps","prevQuery","scrollTo","top","documentElement","scrollHeight","behavior","message","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51045555.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\nexport default class SearchForm extends Component {\n  state = {\n    query: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  handleChange = e => {\n    this.setState({ query: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.query.trim() === '') {\n      toast('Please enter search query');\n      return;\n    }\n    this.props.onSubmit(this.state.query);\n\n    this.setState({ query: '' });\n\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            value={this.state.query}\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n      />\n    );\n  }\n}\n","function fetchImages(query, page) {\n  const API_KEY = '19123661-7bcff1088ecd25ea1b8bca82a';\n  const URL = `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(URL)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Something went wrong.Try again.`));\n    })\n    .then(data => {\n      console.log(data);\n      return data.hits;\n    });\n}\n\nconst API = { fetchImages };\nexport default API;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div className=\"Loader-button\">\n        <button className=\"Button\" type=\"button\" onClick={this.props.onClick}>\n          Load More\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    src: PropTypes.string,\n    alt: PropTypes.string,\n  };\n\n  componentDidMount() {\n    // console.log('Modal componentDidMount');\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    // console.log('Modal componentWillUnmount');\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt}></img>\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import { Component } from 'react';\nimport Modal from '../Modal';\nimport PropTypes from 'prop-types';\n\nexport default class ImageGalleryItem extends Component {\n  state = {\n    showModal: null,\n  };\n\n  static propTypes = {\n    src: PropTypes.string,\n    alt: PropTypes.string,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { src, alt, largeImageURL } = this.props;\n    const { showModal } = this.state;\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          src={src}\n          alt={alt}\n          className=\"ImageGalleryItem-image\"\n          onClick={this.toggleModal}\n        />\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={largeImageURL} alt={alt} />\n        )}\n      </li>\n    );\n  }\n}\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images }) => {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {images.map((image, index) => (\n          <ImageGalleryItem\n            src={image.webformatURL}\n            alt={image.tags}\n            largeImageURL={image.largeImageURL}\n            key={index}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","export default function EmptyField({ texterror }) {\n  return (\n    <div role=\"alert\" style={{ textAlign: 'center' }}>\n      <p>We're sorry but something went wrong {texterror}</p>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Spinner from '../Loader';\nimport API from '../../services/galery-api';\nimport Button from '../Button';\nimport ImageGallery from '../ImageGallery';\nimport EmptyField from '../EmptyField';\nimport PropTypes from 'prop-types';\n\nexport default class ImageGalleryInfo extends Component {\n  state = {\n    images: [],\n    status: 'idle',\n    error: null,\n    page: 1,\n  };\n\n  static propTypes = {\n    query: PropTypes.string,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevProps.query;\n    const nextQuery = this.props.query;\n\n    if (prevQuery !== nextQuery) {\n      this.setState({ page: 1, images: [] });\n    }\n\n    if (prevQuery !== nextQuery) {\n      this.setState({ status: 'pending' });\n\n      this.fetchImagesGallery();\n    }\n    if (prevState.page !== this.state.page) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  fetchImagesGallery = () => {\n    const nextQuery = this.props.query;\n\n    API.fetchImages(nextQuery, this.state.page)\n      .then(newImages => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...newImages],\n          page: this.state.page + 1,\n          status: 'resolved',\n        }));\n        if (newImages.length === 0) {\n          throw new Error('No results were found. Try another search.');\n        }\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }));\n  };\n\n  onLoadMore = () => {\n    this.fetchImagesGallery();\n  };\n\n  render() {\n    const { images, status, error } = this.state;\n    if (status === 'idle') {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          {' '}\n          Please enter a value for search images!\n        </div>\n      );\n    }\n\n    if (status === 'pending') {\n      return <Spinner />;\n    }\n\n    if (status === 'rejected') {\n      return <EmptyField message={error.message} />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ImageGallery images={images} />\n          <Button onClick={this.onLoadMore} />\n        </>\n      );\n    }\n  }\n}\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar';\nimport FetchImages from './components/FetchImages';\n\nexport default class App extends Component {\n  state = {\n    query: '',\n  };\n\n  handleFormSubmit = query => {\n    this.setState({ query });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ToastContainer autoClose={3000} />\n        <FetchImages query={query} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}