{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/services/galery-api.jsx","components/EmptyField/EmptyField.jsx","components/ImageExpectataion/ImageExpectataion.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/ImagesInfo/ImagesInfo.jsx","App.js","index.js"],"names":["Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","className","this","onChange","type","autoComplete","autoFocus","placeholder","Component","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","EmptyField","message","role","ImageExpectataion","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","src","alt","createPortal","onClick","ImageGalleryItem","showModal","toggleModal","largeImageUrl","ImageGallery","images","map","image","index","webformatURL","tags","largeImageURL","Button","scroll","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","ImagesInfo","error","status","onClickLoadMore","prevState","prevProps","prevName","nextName","prevPage","nextPage","imagesAPI","newImages","total","hits","catch","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.895396d0.chunk.js","sourcesContent":["import { ImSearch } from 'react-icons/im';\nimport { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nimport PropTypes from 'prop-types';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Searchbar extends Component {\n  state = {\n    imageName: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleNameChange = event => {\n    this.setState({ imageName: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.imageName.trim() === '') {\n      toast('Find your best picture ');\n      return;\n    }\n\n    this.props.onSubmit(this.state.imageName);\n\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <input\n            value={this.state.imageName}\n            onChange={this.handleNameChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <ImSearch />\n          </button>\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","function fetchImages(name, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=19123661-7bcff1088ecd25ea1b8bca82a&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error('No response from server'));\n  });\n}\n\nconst api = { fetchImages };\n\nexport default api;\n","import PropTypes from 'prop-types';\n\nfunction EmptyField({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>We're sorry but something went wrong: {message}</p>\n    </div>\n  );\n}\n\nEmptyField.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default EmptyField;\n","import React, { Component } from 'react';\n\nimport Loader from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass ImageExpectataion extends Component {\n  render() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    );\n  }\n}\n\nexport default ImageExpectataion;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../Modal';\n\nclass ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    largeImageUrl: PropTypes.string.isRequired,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { src, alt, largeImageUrl } = this.props;\n    const { showModal } = this.state;\n\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          onClick={this.toggleModal}\n          src={src}\n          alt={alt}\n          className=\"ImageGalleryItemImage\"\n        />\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\n        )}\n      </li>\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nfunction ImageGallery({ images }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((image, index) => (\n        <ImageGalleryItem\n          src={image.webformatURL}\n          alt={image.tags}\n          largeImageUrl={image.largeImageURL}\n          key={index}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n  };\n\n  scroll = () => {\n    this.props.onClick();\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 130,\n        behavior: 'smooth',\n      });\n    }, 500);\n  };\n\n  render() {\n    return (\n      <button onClick={this.scroll} className=\"Button\" type=\"button\">\n        Load more\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport imagesAPI from '../services/galery-api';\nimport EmptyField from '../EmptyField';\nimport ImageExpectataion from '../ImageExpectataion';\nimport ImageGallery from '../ImageGallery';\nimport Button from '../Button';\n\nclass ImagesInfo extends Component {\n  state = {\n    images: [],\n    error: null,\n    status: 'idle',\n    page: 1,\n  };\n\n  static propTypes = {\n    imageName: PropTypes.string.isRequired,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.imageName;\n    const nextName = this.props.imageName;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevName !== nextName) {\n      this.setState({ page: 1 });\n    }\n\n    if (prevName !== nextName || prevPage !== nextPage) {\n      this.setState({ status: 'pending' });\n\n      imagesAPI\n        .fetchImages(nextName, nextPage)\n        .then(newImages => {\n          if (newImages.total !== 0) {\n            this.setState(prevState => ({\n              images: [...prevState.images, ...newImages.hits],\n              status: 'resolved',\n            }));\n            return;\n          }\n\n          return Promise.reject(new Error('Invalid request'));\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n  }\n\n  onClickLoadMore = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  render() {\n    const { error, status } = this.state;\n\n    if (status === 'idle') {\n      return <p>Please enter your search term</p>;\n    }\n\n    if (status === 'pending') {\n      return <ImageExpectataion />;\n    }\n\n    if (status === 'rejected') {\n      return <EmptyField message={error.message} />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ImageGallery images={this.state.images} />\n          <Button onClick={this.onClickLoadMore} page={this.state.page} />\n        </>\n      );\n    }\n  }\n}\n\nexport default ImagesInfo;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport ImagesInfo from './components/ImagesInfo';\n\nclass App extends Component {\n  state = {\n    imageName: '',\n  };\n\n  componentDidMount() {}\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n\n        <ImagesInfo imageName={this.state.imageName} />\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}