{"version":3,"sources":["services/galery-api.jsx","components/Container/Container.jsx","components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/ImageExpectataion/ImageExpectataion.jsx","components/EmptyField/EmptyField.jsx","App.js","index.js"],"names":["apiService","query","page","a","axios","get","data","hits","Container","children","Searchbar","onHandleSubmit","onSearchQueryChange","value","className","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","src","alt","createPortal","onClick","Component","ImageGalleryItem","state","showModal","toggleModal","setState","largeImageUrl","ImageGallery","images","map","image","index","webformatURL","tags","largeImageURL","Button","onLoadMore","ImageExpectataion","color","height","width","timeout","EmptyField","texterror","role","App","error","isLoading","searchImages","trim","toast","info","toggleLoader","request","length","handleChange","handleSubmit","preventDefault","scrollPage","onOpenModal","dataset","source","scroll","scrollToBottom","prevProps","prevState","onToggleModal","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21e292e3.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiService = async (query, page) => {\n  const { data } = await axios.get(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=19123661-7bcff1088ecd25ea1b8bca82a&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  return data.hits;\n};\n\nexport default apiService;\n","import PropTypes from 'prop-types';\n// import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\n// import s from './Searchbar.module.css';\nfunction Searchbar({ onHandleSubmit, onSearchQueryChange, value }) {\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={onHandleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <ImSearch />\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          value={value}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={onSearchQueryChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onHandleSubmit: PropTypes.func.isRequired,\n  onSearchQueryChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Searchbar;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../Modal';\n\nclass ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    largeImageUrl: PropTypes.string.isRequired,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { src, alt, largeImageUrl } = this.props;\n    const { showModal } = this.state;\n\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          onClick={this.toggleModal}\n          src={src}\n          alt={alt}\n          className=\"ImageGalleryItemImage\"\n        />\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\n        )}\n      </li>\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nfunction ImageGallery({ images }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((image, index) => (\n        <ImageGalleryItem\n          src={image.webformatURL}\n          alt={image.tags}\n          largeImageUrl={image.largeImageURL}\n          key={index}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nfunction Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\n\nimport Loader from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass ImageExpectataion extends Component {\n  render() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    );\n  }\n}\n\nexport default ImageExpectataion;\n","import PropTypes from 'prop-types';\n\nfunction EmptyField({ texterror }) {\n  return (\n    <div role=\"alert\">\n      <p>We're sorry but something went wrong: {texterror}</p>\n    </div>\n  );\n}\n\nEmptyField.propTypes = {\n  texterror: PropTypes.string.isRequired,\n};\n\nexport default EmptyField;\n","import { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport apiService from './services/galery-api';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport ImageExpectataion from './components/ImageExpectataion';\nimport Modal from './components/Modal';\nimport EmptyField from './components/EmptyField';\nimport { animateScroll as scroll } from 'react-scroll';\n\nclass App extends Component {\n  state = {\n    query: '',\n    images: [],\n    largeImageURL: '',\n    page: 1,\n    error: null,\n    isLoading: false,\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.setState({ images: [], page: 1, error: null });\n    }\n  }\n\n  searchImages = async () => {\n    const { query, page } = this.state;\n\n    if (query.trim() === '') {\n      return toast.info('Please enter a value for search images!');\n    }\n\n    this.toggleLoader();\n\n    try {\n      const request = await apiService(query, page);\n      this.setState(({ images, page }) => ({\n        images: [...images, ...request],\n        page: page + 1,\n      }));\n      if (request.length === 0) {\n        this.setState({ error: `No results were found for ${query}!` });\n      }\n    } catch (error) {\n      this.setState({ error: 'Something went wrong. Try again.' });\n    } finally {\n      this.toggleLoader();\n    }\n  };\n\n  handleChange = e => {\n    this.setState({ query: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.searchImages();\n  };\n\n  onLoadMore = () => {\n    this.searchImages();\n    this.scrollPage();\n  };\n\n  onOpenModal = e => {\n    this.setState({ largeImageURL: e.target.dataset.source });\n    this.toggleModal();\n  };\n\n  toggleLoader = () => {\n    this.setState(({ isLoading }) => ({\n      isLoading: !isLoading,\n    }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  scrollPage = () => {\n    scroll.scrollToBottom();\n  };\n\n  render() {\n    const {\n      query,\n      images,\n      largeImageURL,\n      isLoading,\n      showModal,\n      error,\n    } = this.state;\n    return (\n      <Container>\n        <Searchbar\n          onHandleSubmit={this.handleSubmit}\n          onSearchQueryChange={this.handleChange}\n          value={query}\n        />\n\n        {error && <EmptyField texterror={error} />}\n\n        {images.length > 0 && !error && (\n          <ImageGallery images={images} onOpenModal={this.onOpenModal} />\n        )}\n\n        {isLoading && <ImageExpectataion />}\n\n        {!isLoading && images.length >= 12 && !error && (\n          <Button onLoadMore={this.onLoadMore} />\n        )}\n\n        {showModal && (\n          <Modal\n            onToggleModal={this.toggleModal}\n            largeImageURL={largeImageURL}\n          />\n        )}\n        <ToastContainer autoClose={3700} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}